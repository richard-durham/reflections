Udacity - Git & Github course

Lesson 2 Reflections

* Reflect: Initializing a Repository
What happens when you initalize a repository?  Why do you need to do it?
When you initialize a repository, Git creates the .git file, and takes an inventory of what is in the directory/repository.
Without the inital inventory, Git would not know what it had to work with.

* Reflect: Staging Area
How is the staging area different from the working directory and the repository?  What value do you think it offers?
The staging area is simply a list of the files currently under consideration for a commit.  This allows the user to see, clearly and simply, what is to be included in the commit.  This clarity should reduce likelihood of a bad commit (i.e. including too few or too many files).

*Reflect: Commit Size
How can you use the staging area to make sure you have one commit per logical change?
Use of 'git diff --staged' allows you to see exactly which changes are about to be committed.  This allows you to determine if the staging area contains a logical change, or if you need to either add more (due to a missing piece) or remove bits (in case there is more than one logical change in the staging area)

*Reflect: When to Use Branches
What are some situations when branches would be helpful in keeping your history organized?  How would branches help?
Branches would be useful for keeping uncertain changes seperate from the main/working code.  Allowing you to experiment without fear of breaking everything - and at the same time making it easy to see the differences between the experimental code and the 'master'/working code.